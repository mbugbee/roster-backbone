<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Roster Client - Backbone</title>
    <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.1.1/css/bootstrap.min.css">
  </head>
  <body>


    <div class="container">
      <h1>Roster Client: Backbone</h1>
      <hr />
      <div class="viewContainer"></div>
    </div>


    <script src="http://cdnjs.cloudflare.com/ajax/libs/jquery/1.8.2/jquery.min.js" type="text/javascript"></script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.4.2/underscore-min.js" type="text/javascript"></script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/backbone.js/0.9.2/backbone-min.js"></script>

    <script type="text/template" id="roster-template">
      <a href="#/add" class="btn btn-success">Add Player</a>
      <hr />
      <table class="table table-hover">
        <thead>
          <tr>
            <th>Name</th>
            <th>Number</th>
            <th>Position</th>
            <th>Goals</th>
            <th>Assists</th>
            <th></th>
          </tr>
        </thead>
        <tbody>
          <% _.each( roster, function ( player ) { %>
              <tr>
                <td><%= player.get('name') %></td>
                <td><%= player.get('number') %></td>
                <td><%= player.get('position') %></td>
                <td><%= player.get('goals') %></td>
                <td><%= player.get('assists') %></td>
                <td><a class="btn" href="#/edit/<%= player.get('_id') %>">Edit</a></td>
                
              </tr>
          <% }); %>
        </tbody>
      </table>
    </script>

    <script type="text/template" id="player-form-template">
      <form class="player-form">
        <legend><%= player ? 'Edit' : 'New' %> Player</legend>
        <div class="form-group">
          <label>Name</label>
          <input type="text" name="name" value="<%= player ? player.get('name') : '' %>">
        </div>
        <div class="form-group">
          <label>Number</label>
          <input type="text" name="number" value="<%= player ? player.get('number') : '' %>">
        </div>
        <div class="form-group">
          <label>Position</label>
          <input type="text" name="position" value="<%= player ? player.get('position') : '' %>">
        </div>
        <div class="form-group">
          <label>Goals</label>
          <input type="text" name="goals" value="<%= player ? player.get('goals') : '' %>">
        </div>
        <div class="form-group">
          <label>Assists</label>
          <input type="text" name="assists" value="<%= player ? player.get('assists') : '' %>">
        </div>
        <button type="submit" class="btn btn-success">Save Player</button>
        <% if(player) { %>
          <input type="hidden" name="id" value="<%= player.id %>"/> 
          <button type="button" class="btn btn-danger delete">Delete</button>
       <% }; %>
      </form>
    </script>

    <script>
      $.fn.serializeObject = function() {
        var o = {};
        var a = this.serializeArray();
        $.each(a, function() {
            if (o[this.name] !== undefined) {
                if (!o[this.name].push) {
                    o[this.name] = [o[this.name]];
                }
                o[this.name].push(this.value || '');
            } else {
                o[this.name] = this.value || '';
            }
        });
        return o;
      };

      $.ajaxPrefilter( function( options, originalOptions, jqXHR ) {
        options.url = 'http://roster.floorislava.com/api' + options.url;
      });

      var Player = Backbone.Model.extend({
        urlRoot: '/players'
      });

      var Roster = Backbone.Collection.extend({
        model: Player,
        url: '/players'
      });

      var RosterView = Backbone.View.extend({
        el: '.viewContainer',
        render: function(){
          var that = this;
          var roster = new Roster();
              roster.fetch({
                success: function (roster) {
                  var template = _.template($('#roster-template').html(), { roster: roster.models });
                  that.$el.html( template );
                }
              })  
        }
        
      });

      var rosterView = new RosterView();

      var PlayerFormView = Backbone.View.extend({
        el: '.viewContainer',
        events: {
          'submit .player-form': 'savePlayer',
          'click .delete': 'deletePlayer'
        },
        savePlayer: function (ev){
          var playerDetails = $(ev.currentTarget).serializeObject();
          var player = new Player();
              player.save(playerDetails, {
                success: function (player) {
                  router.navigate('', {trigger:true});
                }
              });
              return false;
        },
        deletePlayer: function(ev)
        {
          this.player.destroy({
            success: function ()
            {
              console.log('Player Removed');
              router.navigate('', {trigger:true});
            }
          });
          return false;
        },
        render: function (options) {
          var that = this;
          if (options.id)
          {
            that.player = new Player({id: options.id});
            that.player.fetch({
              success: function (player) {
                console.log(player);
                var template = _.template($('#player-form-template').html(), {player: player});
                that.$el.html(template);
              }
            })
          } else {
            var template = _.template($('#player-form-template').html(), {player: null});
            that.$el.html(template);
          }
        }

      });

      var playerFormView = new PlayerFormView();

      var Router = Backbone.Router.extend({
          routes: {
            "": "list", 
            "add": "form",
            "edit/:id": "form",
            
          }
      });

      var router = new Router;
          router.on('route:list', function() {
            // render user list
            rosterView.render();
          })
      router.on('route:form', function(id) {
        playerFormView.render({id: id});
      })
      Backbone.history.start();


    </script>

  </body>
</html>